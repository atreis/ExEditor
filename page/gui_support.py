#! /usr/bin/env python
#
# Support module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Oct 28, 2017 11:42:35 AM


import json
import traceback
import rxgui
import rxfile

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    from tkinter import filedialog
    py3 = 1

def set_Tk_var():
    global safemodeon
    global safemodeoff
    safemodeon = StringVar()
    safemodeoff = StringVar()

def menu_open():
    global w
    options = {}
    options['title'] = "Open Rx SRM..."
    options['filetypes'] = [('srm', '*.srm'), ('any', '*.*')]
    filename = filedialog.askopenfile(mode="r", **options)
    if filename is not None:
        print(filename.name)
        try:
            fh = rxfile.RxFileHandler.RxFileWrapper(filename.name)
            rxgui.rxeditorstate.setFileHandle(fh)
            rxgui.PopulateSettings.clear(w.getAdvancedTree())
            rxgui.PopulateSettings.populateAdvancedTree(fh, w.getAdvancedTree())
        except:
            traceback.print_exc()

def menu_save():
    fh = rxgui.rxeditorstate.getFileHandle()
    if fh is not None:
        fh.save()

def menu_saveAs():
    fh = rxgui.rxeditorstate.getFileHandle()
    if fh is not None:
        options = {}
        options['title'] = "Save Rx SRM..."
        options['filetypes'] = [('srm', '*.srm'), ('any', '*.*')]
        options['defaultextension'] = '.srm'
        filename = filedialog.asksaveasfile(mode="w", **options)
        if filename is not None:
            fh.saveAs(filename.name)

def menu_exit():
    fh = rxgui.rxeditorstate.getFileHandle()
    if fh is not None and fh.isDirty():
        menu_saveAs()
    destroy_window()

def tree_doubleclick(event):
    global w
    item = w.getAdvancedTree().selection()[0]
    keys = item.split('-')
    values = w.getAdvancedTree().item(item)["values"]
    if len(values) > 0:
        # We have a value - prevents an error from clicking parent elements in the tree
        value = values[0]
        if isinstance(value,str) and value.startswith('['):
            # Value is really a list
            value = json.loads(value)
        elif isinstance(value,str) and value.startswith('0x'):
            # Value in hex
            pass
        else:
            try:
                value = int(value)
            except ValueError:
                # Just go with a string
                pass

        return item, keys, value, rxgui.rxeditorstate.getFileHandle()

def tree_updatevalues(item, keys, newvalues, fh):
    global w

    w.getAdvancedTree().item(item, values=[str(newvalues)])
    fh.setValue(keys, newvalues)

def TODO():
    print('gui_support.TODO')
    sys.stdout.flush()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import gui
    gui.vp_start_gui()


